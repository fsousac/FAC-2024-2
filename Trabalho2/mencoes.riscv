
    .data
SR:     .asciz "SR\n"   # String para conceito SR
II:     .asciz "II\n"   # String para conceito II
MI:     .asciz "MI\n"   # String para conceito MI
MM:     .asciz "MM\n"   # String para conceito MM
MS:     .asciz "MS\n"   # String para conceito MS
SS:     .asciz "SS\n"   # String para conceito SS

    .text
    .globl main
main:
    # Leitura da nota
    li a7, 5              # Código de syscall para leitura de inteiro
    ecall
    mv t0, a0           # Armazena a nota lida

    # Comparações para determinar o conceito
    li t1, 0
    beq t0, t1, print_SR  # Se nota == 0, imprime SR

    li t1, 1
    blt t0, t1, print_SR  # Se nota < 1, imprime SR

    li t1, 30
    blt t0, t1, print_II  # Se nota < 30, imprime II

    li t1, 50
    blt t0, t1, print_MI  # Se nota < 50, imprime MI

    li t1, 70
    blt t0, t1, print_MM  # Se nota < 70, imprime MM

    li t1, 90
    blt t0, t1, print_MS  # Se nota < 90, imprime MS

    # Se nenhuma das condições acima for verdadeira, imprime SS
    j print_SS

print_SR:
    la a0, SR
    j print

print_II:
    la a0, II
    j print

print_MI:
    la a0, MI
    j print

print_MM:
    la a0, MM
    j print

print_MS:
    la a0, MS
    j print

print_SS:
    la a0, SS

print:
    li a7, 4              # Código de syscall para impressão de string
    ecall

    # Finaliza o programa
    li a7, 10             # Código de syscall para encerrar o programa
    ecall
